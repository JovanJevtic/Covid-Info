{"version":3,"sources":["api/index.ts","components/Menu.tsx","components/InfoCard.tsx","components/GlobalData.tsx","components/CountryData.tsx","pages/Page.tsx","App.tsx","serviceWorker.ts","index.tsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object"],"names":["getWorldData","a","axios","get","response","data","getCountryData","country","url","getCountryFlag","getCountriesList","appPages","title","imgSrc","globe","iso","Menu","location","useLocation","useState","countriesList","setCountriesList","sortedCountriesList","setSortedCountriesList","searchText","setSearchText","getFlags","forEach","page","countryInfo","flag","getAllCountries","sortCountries","b","cases","useEffect","sort","contentId","type","id","style","marginBottom","marginTop","map","appPage","index","key","autoHide","className","pathname","routerLink","routerDirection","lines","detail","maxWidth","maxHeight","slot","src","icon","fontSize","color","fontWeight","onIonInput","e","query","currentTarget","value","toLowerCase","requestAnimationFrame","item","shouldShow","indexOf","shouldHide","onIonChange","debounce","countrie","display","InfoCard","cardColor","setCardColor","formatedValue","Intl","NumberFormat","format","borderBottom","justifyContent","aligItems","textAlign","GlobalData","setData","activeCasesNumber","setActiveCases","todayCasesNumber","setTodayCases","todayDeathsNumber","setTodayDeaths","todayRecoveredNumber","setTodayRecovered","casesNumber","setCases","testsNumber","setTests","recoveredNumber","setRecovered","deathsNumber","setDeaths","setAffectedCountries","getGloabalData","Object","keys","length","affectedCountries","deaths","recovered","tests","todayCases","todayDeaths","todayRecovered","active","CountryData","getData","Page","name","useParams","isHome","setIsHome","isCountry","setIsCountry","setTitle","fullscreen","collapse","size","target","rel","href","App","path","component","exact","from","to","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","Error","code","ids","module","exports"],"mappings":"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","file":"static/js/main.edcb7bdc.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const getWorldData = async () => {\r\n    let url = 'https://disease.sh/v3/covid-19/all'; \r\n    \r\n    const response = await axios.get(url);\r\n    const data = await response.data;\r\n\r\n    return data;\r\n}\r\n\r\nexport const getCountryData = async (country: string) => {\r\n    let url = `https://disease.sh/v3/covid-19/countries/${country}`;\r\n\r\n    const response = await axios.get(url);\r\n    const data = await response.data;\r\n    \r\n    return data;\r\n}\r\n\r\nexport const getCountryFlag = async (country: string) => {\r\n    let url = `https://disease.sh/v3/covid-19/countries/${country}`;\r\n    \r\n    const response = await axios.get(url);\r\n    const data = await response.data;\r\n\r\n    return data;\r\n}\r\n\r\nexport const getCountriesList = async () => {\r\n    let url = `https://disease.sh/v3/covid-19/countries/`;\r\n\r\n    const response = await axios.get(url);\r\n    const data = await response.data;\r\n\r\n    return data;\r\n}","import {\r\n  IonContent,\r\n  IonIcon,\r\n  IonItem,\r\n  IonLabel,\r\n  IonList,\r\n  IonListHeader,\r\n  IonMenu,\r\n  IonMenuToggle,\r\n  IonNote,\r\n  IonImg,\r\n  IonTitle,\r\n  IonText,\r\n  IonSearchbar,\r\n} from '@ionic/react';\r\n\r\nimport { RefresherEventDetail } from '@ionic/core';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './Menu.css';\r\nimport { globe, globeOutline } from 'ionicons/icons';\r\nimport { getCountryFlag, getCountriesList } from '../api/index';\r\nimport { count } from 'console';\r\n \r\ninterface AppPage {\r\n  url: string;\r\n  imgSrc: string\r\n  title: string;\r\n  iso: string;\r\n}\r\n\r\ninterface CountryPage {\r\n  country: string;\r\n  url: string;\r\n  countryInfo: countryInfo;\r\n  shouldHide?: boolean;\r\n}\r\n\r\ntype countryInfo = {\r\n  flag: string;\r\n}\r\n\r\nconst appPages: AppPage[] = [\r\n  {\r\n    title: 'Globalno',\r\n    url: '/page/Globalno',\r\n    imgSrc: globe,\r\n    iso: 'Worldwide',\r\n  },\r\n  {\r\n    title: 'Srbija',\r\n    url: '/page/SRB',\r\n    imgSrc: 'https://disease.sh/assets/img/flags/rs.png',\r\n    iso: 'SRB',\r\n  },\r\n  {\r\n    title: 'Hrvatska',\r\n    url: '/page/HRV',\r\n    imgSrc: 'https://disease.sh/assets/img/flags/hr.png',\r\n    iso: 'HRV',\r\n  },\r\n  {\r\n    title: 'Bosna i Hercegovina',\r\n    url: '/page/BIH',\r\n    imgSrc: 'https://disease.sh/assets/img/flags/ba.png',\r\n    iso: 'BIH',                                               \r\n  },\r\n  {\r\n    title: 'Crna Gora',\r\n    url: '/page/MNE',\r\n    imgSrc: 'https://disease.sh/assets/img/flags/me.png',\r\n    iso: 'MNE',\r\n  },\r\n];\r\n\r\nconst Menu: React.FC = () => {\r\n  const location = useLocation();\r\n\r\n  const [ countriesList, setCountriesList ] = useState<CountryPage[]>([]);\r\n  const [ sortedCountriesList, setSortedCountriesList ] = useState<CountryPage[]>([]);\r\n  const [ searchedCountriesList, setSearchedCountriesList ] = useState<CountryPage[]>([]);\r\n  const [ searchText, setSearchText ] = useState<string>('');\r\n\r\n  const getFlags = async () => {\r\n    appPages.forEach(async page => {\r\n\r\n      if (page.iso === 'Worldwide' || page.iso === 'Globalno') return;\r\n\r\n      const response = await getCountryFlag(page.iso)\r\n      page.imgSrc = response.countryInfo.flag;\r\n    })\r\n  }\r\n\r\n  const getAllCountries = async () => {\r\n    const response = await getCountriesList();\r\n    setCountriesList(response)\r\n  }\r\n\r\n  const sortCountries = (a: any, b: any) => {\r\n    if (a.cases < b.cases) {\r\n      return 1;\r\n    }\r\n    \r\n    if (a.cases > b.cases) {\r\n      return -1;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  const handleSearchInput = (e: any) => {\r\n    const query = e.currentTarget.value.toLowerCase();\r\n    requestAnimationFrame(() => {\r\n      sortedCountriesList.forEach(item => {\r\n        const shouldShow = item.country.toLowerCase().indexOf(query) > -1;\r\n        item.shouldHide = !shouldShow;\r\n      });\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getFlags();\r\n    getAllCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSortedCountriesList(countriesList.sort(sortCountries));\r\n  }, [countriesList])\r\n\r\n  return (\r\n    <IonMenu contentId=\"main\" type=\"overlay\">\r\n      <IonContent>\r\n        <IonList id=\"inbox-list\">\r\n          <IonListHeader style={{marginBottom: 20, marginTop: -22}}>Covid Info</IonListHeader>\r\n          {appPages.map((appPage, index) => {\r\n            return (\r\n              <IonMenuToggle key={index} autoHide={false}>\r\n                <IonItem className={location.pathname === appPage.url ? 'selected' : ''} routerLink={appPage.url} routerDirection=\"none\" lines=\"none\" detail={false}>\r\n                  {appPage.title != 'Globalno' && <IonImg style={{maxWidth: 30, maxHeight: 30}} slot=\"start\" src={appPage.imgSrc} />} \r\n                  {/* appPage.title != 'Globalno' && <IonText style={{width: 50, color: 'white'}} slot=\"start\"> {appPage.iso} </IonText> */}\r\n                  { appPage.title === 'Globalno' && <IonIcon icon={globe} style={{maxWidth: 28, maxHeight: 30, fontSize: 30, color: 'white'}} slot=\"start\" /> }\r\n                  <IonLabel style={{fontWeight: 'bold'}}>{appPage.title}</IonLabel>\r\n                </IonItem>\r\n              </IonMenuToggle>\r\n            );\r\n          })}\r\n        </IonList>\r\n        <IonSearchbar onIonInput={handleSearchInput} value={searchText} onIonChange={e => setSearchText(e.detail.value!)} debounce={1000}></IonSearchbar>\r\n        <IonList id=\"allCountries-list\">\r\n          {\r\n            sortedCountriesList.map((countrie, index) => {\r\n              return (\r\n                <IonMenuToggle key={index} autoHide={false}>\r\n                  <IonItem style={{display: countrie.shouldHide ? 'none' : 'block'}} className={location.pathname === `/page/${countrie.country}` ? 'selected' : ''} routerLink={`/page/${countrie.country}`} routerDirection=\"none\" lines=\"none\" detail={false}>\r\n                    <IonImg style={{maxWidth: 30, maxHeight: 30}} slot=\"start\" src={countrie.countryInfo.flag} />\r\n                    <IonLabel style={{fontWeight: 'bold'}}>{countrie.country}</IonLabel>\r\n                  </IonItem>\r\n                </IonMenuToggle>\r\n              );\r\n            })\r\n          }\r\n        </IonList>\r\n      </IonContent>\r\n    </IonMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n    IonLabel,\r\n    IonCard,\r\n    IonCardContent,\r\n    IonCardTitle,\r\n    IonItem,\r\n} from '@ionic/react';\r\n\r\nimport './InfoCard.css'\r\n\r\ninterface Props {\r\n    title: string | undefined;\r\n    value: any;\r\n    color: string;\r\n}\r\n\r\nconst InfoCard: React.FC<Props> = ({ title, value, color }) => {\r\n\r\n    const [ cardColor, setCardColor ] = useState('');\r\n    const formatedValue = new Intl.NumberFormat('IN').format(value);\r\n\r\n    useEffect(() => {\r\n        if (color === 'red') {\r\n            setCardColor('#ed576b')\r\n        } else if (color === 'blue') {\r\n            setCardColor('#50c8ff')\r\n        } else if (color === 'green') {\r\n            setCardColor('#2dd36f')\r\n        }\r\n    }, [])\r\n\r\n    return(\r\n        <IonCard style={{borderBottom: `5px solid ${cardColor}`}} className=\"card-wrapp\" color={'light tint'} >\r\n            <IonItem style={{display: 'flex', justifyContent: 'center', aligItems: 'center'}} color={'light tint'}>\r\n                <IonCardTitle style={{fontWeight: 'bold'}} className=\"card-title\"> {title} </IonCardTitle>\r\n            </IonItem>\r\n            <IonItem color={'light tint'}>\r\n                <IonCardContent style={{color: cardColor, textAlign: 'center'}} className=\"card-content\"> {formatedValue} </IonCardContent>\r\n            </IonItem>\r\n        </IonCard>\r\n    );\r\n}\r\n\r\nexport default InfoCard;","import React, { useState, useEffect } from 'react';\r\nimport { getWorldData } from '../api/index';\r\nimport {\r\n    IonLabel,\r\n} from '@ionic/react';\r\n\r\nimport InfoCard from './InfoCard';\r\n\r\nimport './InfoCard.css';\r\n\r\ninterface Data {\r\n    active?: number;\r\n    todayCases?: number;\r\n    todayDeaths?: number;\r\n    todayRecovered?: number;\r\n    cases?: number;\r\n    tests?: number;\r\n    recovered?: number;\r\n    deaths?: number;\r\n    affectedCountries?: number;\r\n}\r\n\r\nconst GlobalData: React.FC = () => {\r\n\r\n    const [ data, setData] = useState<Data>({});\r\n\r\n    //* Daily Data\r\n    const [ activeCasesNumber, setActiveCases ] = useState<number>();\r\n    const [ todayCasesNumber, setTodayCases ] = useState<number>();\r\n    const [ todayDeathsNumber, setTodayDeaths ] = useState<number>();\r\n    const [ todayRecoveredNumber, setTodayRecovered ] = useState<number>();\r\n\r\n    //* Alltime Data\r\n    const [ casesNumber, setCases ] = useState<number>();\r\n    const [ testsNumber, setTests ] = useState<number>();\r\n    const [ recoveredNumber, setRecovered ] = useState<number>();\r\n    const [ deathsNumber, setDeaths ] = useState<number>();\r\n    const [ affectedCountriesNumber, setAffectedCountries ] = useState<number>();\r\n\r\n    const getGloabalData = async () => {\r\n        const response = await getWorldData();\r\n        setData(response);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getGloabalData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(data).length != 0) {\r\n          const {  \r\n            affectedCountries,\r\n            cases, \r\n            deaths, \r\n            recovered, \r\n            tests, \r\n            todayCases, \r\n            todayDeaths, \r\n            todayRecovered,\r\n            active,\r\n        } = data;\r\n    \r\n        setActiveCases(active);\r\n        setAffectedCountries(affectedCountries);\r\n        setCases(cases)\r\n        setDeaths(deaths)\r\n        setRecovered(recovered)\r\n        setTests(tests)\r\n        setTodayCases(todayCases)\r\n        setTodayDeaths(todayDeaths)\r\n        setTodayRecovered(todayRecovered)\r\n    \r\n        }\r\n    }, [data]);\r\n\r\n    return(\r\n        <> \r\n            <div className=\"infoCard-row\">\r\n                <InfoCard title='Aktivnih slucajeva:' value={activeCasesNumber} color={'blue'} /> \r\n            </div>\r\n            <div className=\"label-row-wrapp\">\r\n                <div className=\"date-label\">Danas</div>\r\n            </div>\r\n            <div className=\"infoCard-row\">\r\n                <InfoCard title='Slucajeva danas:' value={todayCasesNumber} color={'blue'} />\r\n            </div>\r\n            <div className=\"infoCard-row\">\r\n                <InfoCard title='Oporavljenih danas:' value={todayRecoveredNumber} color={'green'} /> \r\n            </div>\r\n            <div className=\"infoCard-row\">\r\n                <InfoCard title='Smrti danas:' value={todayDeathsNumber} color={'red'} />\r\n            </div>\r\n            <div className=\"label-row-wrapp\">\r\n                <div className=\"date-label\">Ukupno</div>\r\n            </div>\r\n            <div className=\"infoCard-row\">\r\n                <InfoCard title='Ukupnih slucajeva:' value={casesNumber} color={'blue'} />\r\n            </div>\r\n            <div className=\"infoCard-row\">\r\n                <InfoCard title='Ukupno oporavljenih:' value={recoveredNumber} color={'green'} />\r\n            </div>\r\n            <div className=\"infoCard-row\">\r\n                <InfoCard title='Ukupno smrti:' value={deathsNumber} color={'red'} /> \r\n            </div>\r\n            <div className=\"infoCard-row\">\r\n                <InfoCard title='Testiranih:' value={testsNumber} color={'blue'} /> \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GlobalData;","import React, { useState, useEffect } from 'react';\r\nimport { getCountryData } from '../api/index';\r\nimport {\r\n    IonLabel,\r\n    IonItem\r\n} from '@ionic/react';\r\n\r\nimport InfoCard from './InfoCard';\r\n\r\nimport './InfoCard.css';\r\n\r\ninterface Props {\r\n    country: string;\r\n}\r\n\r\ninterface Data {\r\n    active?: number;\r\n    todayCases?: number;\r\n    todayDeaths?: number;\r\n    todayRecovered?: number;\r\n    cases?: number;\r\n    tests?: number;\r\n    recovered?: number;\r\n    deaths?: number;\r\n    affectedCountries?: number;\r\n}\r\n\r\nconst CountryData: React.FC<Props> = ({ country }) => {\r\n    \r\n    const [ data, setData ] = useState<Data>({});\r\n\r\n    //* Daily Data\r\n    const [ activeCasesNumber, setActiveCases ] = useState<number>();\r\n    const [ todayCasesNumber, setTodayCases ] = useState<number>();\r\n    const [ todayDeathsNumber, setTodayDeaths ] = useState<number>();\r\n    const [ todayRecoveredNumber, setTodayRecovered ] = useState<number>();\r\n\r\n    //* Alltime Data\r\n    const [ casesNumber, setCases ] = useState<number>();\r\n    const [ testsNumber, setTests ] = useState<number>();\r\n    const [ recoveredNumber, setRecovered ] = useState<number>();\r\n    const [ deathsNumber, setDeaths ] = useState<number>();\r\n    const [ affectedCountriesNumber, setAffectedCountries ] = useState<number>();\r\n\r\n    const getData = async () => {\r\n\r\n        if (country === 'Globalno') return;\r\n\r\n        const response = await getCountryData(country);\r\n        setData(response);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [country])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(data).length != 0) {\r\n          const {  \r\n            affectedCountries,\r\n            cases, \r\n            deaths, \r\n            recovered, \r\n            tests, \r\n            todayCases, \r\n            todayDeaths, \r\n            todayRecovered,\r\n            active,\r\n        } = data;\r\n    \r\n        setActiveCases(active);\r\n        setAffectedCountries(affectedCountries);\r\n        setCases(cases)\r\n        setDeaths(deaths)\r\n        setRecovered(recovered)\r\n        setTests(tests)\r\n        setTodayCases(todayCases)\r\n        setTodayDeaths(todayDeaths)\r\n        setTodayRecovered(todayRecovered)\r\n    \r\n        }\r\n    }, [data]);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"infoCard-row\">\r\n                <InfoCard title='Aktivnih slucajeva:' value={activeCasesNumber} color={'blue'} /> \r\n            </div>\r\n            <div className=\"label-row-wrapp\">\r\n                <div className=\"date-label\">Danas</div>\r\n            </div>\r\n            <div className=\"infoCard-row\">\r\n                <InfoCard title='Slucajeva danas:' value={todayCasesNumber} color={'blue'} />\r\n            </div>\r\n            <div className=\"infoCard-row\">\r\n                <InfoCard title='Oporavljenih danas:' value={todayRecoveredNumber} color={'green'} /> \r\n            </div>\r\n            <div className=\"infoCard-row\">\r\n                <InfoCard title='Smrti danas:' value={todayDeathsNumber} color={'red'} />\r\n            </div>\r\n            <div className=\"label-row-wrapp\">\r\n                <div className=\"date-label\">Ukupno</div>\r\n            </div>\r\n            <div className=\"infoCard-row\">\r\n                <InfoCard title='Ukupnih slucajeva:' value={casesNumber} color={'blue'} />\r\n            </div>\r\n            <div className=\"infoCard-row\">\r\n                <InfoCard title='Ukupno oporavljenih:' value={recoveredNumber} color={'green'} />\r\n            </div>\r\n            <div className=\"infoCard-row\">\r\n                <InfoCard title='Ukupno smrti:' value={deathsNumber} color={'red'} /> \r\n            </div>\r\n            <div className=\"infoCard-row\">\r\n                <InfoCard title='Testiranih:' value={testsNumber} color={'blue'} /> \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CountryData;","import { IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar } from '@ionic/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport GlobalData from '../components/GlobalData';\r\nimport CountryData from '../components/CountryData';\r\n\r\nimport { getWorldData } from '../api/index';\r\n\r\nconst Page: React.FC = () => {\r\n\r\n  const { name } = useParams<{ name: string; }>();\r\n  const [ isHome, setIsHome ] = useState<boolean>();\r\n  const [ isCountry, setIsCountry ] = useState<boolean>();\r\n  const [ title, setTitle ] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    if (name === 'BIH') {\r\n      setTitle('Bosna i Hercegovina');\r\n    } else if (name === 'SRB') {\r\n      setTitle('Srbija');\r\n    } else if (name === 'HRV') {\r\n      setTitle('Hrvatska');\r\n    } else if (name === 'MNE') {\r\n      setTitle('Crna Gora')\r\n    } else {\r\n      setTitle(name)\r\n    }\r\n  }, [name])\r\n\r\n  useEffect(() => {\r\n    if (name === 'Globalno') {\r\n      setTitle('Globalno')\r\n      setIsHome(true);\r\n      setIsCountry(false)\r\n    } else {\r\n      setIsCountry(true);\r\n      setIsHome(false)\r\n    }\r\n  }, [name])\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonButtons slot=\"start\">\r\n            <IonMenuButton />\r\n          </IonButtons>\r\n          <IonTitle>Covid Info - {title}</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent fullscreen>\r\n        <IonHeader collapse=\"condense\">\r\n          <IonToolbar>\r\n            <IonTitle size=\"large\">{title}</IonTitle>\r\n          </IonToolbar>\r\n        </IonHeader>\r\n        <IonContent>\r\n          { isHome && <GlobalData /> }\r\n          { isCountry && <CountryData country={name} /> }\r\n          <div className=\"menu-footer\">\r\n            <a target=\"_blank\" rel=\"noopener\" href=\"https://jevtic.netlify.app/\">Created by: Jovan Jevtic;</a>\r\n            <p className=\"footer-copyright\">Copyright© 2020, all rights reserved;</p>\r\n          </div>\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import Menu from './components/Menu';\r\nimport Page from './pages/Page';\r\nimport React from 'react';\r\nimport { IonApp, IonRouterOutlet, IonSplitPane } from '@ionic/react';\r\nimport { IonReactRouter } from '@ionic/react-router';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n/* Core CSS required for Ionic components to work properly */\r\nimport '@ionic/react/css/core.css';\r\n\r\n/* Basic CSS for apps built with Ionic */\r\nimport '@ionic/react/css/normalize.css';\r\nimport '@ionic/react/css/structure.css';\r\nimport '@ionic/react/css/typography.css';\r\n\r\n/* Optional CSS utils that can be commented out */\r\nimport '@ionic/react/css/padding.css';\r\nimport '@ionic/react/css/float-elements.css';\r\nimport '@ionic/react/css/text-alignment.css';\r\nimport '@ionic/react/css/text-transformation.css';\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '@ionic/react/css/display.css';\r\n\r\n/* Theme variables */\r\nimport './theme/variables.css';\r\n\r\nconst App: React.FC = () => {\r\n\r\n  return (\r\n    <IonApp>\r\n      <IonReactRouter>\r\n        <IonSplitPane contentId=\"main\">\r\n          <Menu />\r\n          <IonRouterOutlet id=\"main\">\r\n            <Route path=\"/page/:name\" component={Page} exact />\r\n            <Redirect from=\"/\" to=\"/page/Globalno\" exact />\r\n          </IonRouterOutlet>\r\n        </IonSplitPane>\r\n      </IonReactRouter>\r\n    </IonApp>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t109,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t110,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t111,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t112,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t113,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t114,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t115,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t116,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t117,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t118,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t119,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t120,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t121,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t122,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t123,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t124,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t125,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t126,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t127,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t128,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t129,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t130,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t131,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t132,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t133,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t134,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t135,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t136,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t137,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t138,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t139,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t140,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t141,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t142,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t143,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t144,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t145,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t146,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t147,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t148,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t149,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t150,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t151,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 72;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t155,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 74;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}